<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Travis-Ci on 翱翔在空中</title><link>https://anemology.cc/tags/travis-ci/</link><description>Recent content in Travis-Ci on 翱翔在空中</description><generator>Hugo</generator><language>zh-TW</language><lastBuildDate>Sun, 30 Jun 2019 16:22:49 +0000</lastBuildDate><atom:link href="https://anemology.cc/tags/travis-ci/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Travis CI 自動部署 Hexo 部落格</title><link>https://anemology.cc/post/setup-travis-ci-for-hexo-on-github/</link><pubDate>Sun, 30 Jun 2019 16:22:49 +0000</pubDate><guid>https://anemology.cc/post/setup-travis-ci-for-hexo-on-github/</guid><description>&lt;p>之前文章提到，部落格的分支有兩個，&lt;code>hexo&lt;/code> 及 &lt;code>master&lt;/code>，在 &lt;code>hexo&lt;/code> 分支寫文章，之後使用 &lt;code>hexo deploy&lt;/code> 部署到 Github 的 &lt;code>master&lt;/code> 分支上，確定沒問題的時候再將原始碼 &lt;code>push&lt;/code> 到 &lt;code>hexo&lt;/code> 分支。&lt;/p>
&lt;p>但本機還需要安裝 &lt;code>nodejs&lt;/code> 以及 &lt;code>hexo&lt;/code> 才能使用 &lt;code>hexo deploy&lt;/code>。&lt;/p>
&lt;p>現在有了 &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 之後，就可以只專注在寫文章上，不用再去思考或是回想 &lt;code>hexo&lt;/code> 的指令如何下，流程就會變成以下：&lt;/p>
&lt;p>在本機寫完文章，直接將原始碼 &lt;code>push&lt;/code> 到 &lt;code>hexo&lt;/code> 分支上，接著 &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 會幫自動做 &lt;code>hexo deploy&lt;/code> 的動作，自動部署回 Github。&lt;/p>
&lt;h2 id="連結-travis-ci">連結 Travis CI&lt;/h2>
&lt;p>直接使用 Github 的帳號登入 &lt;a href="https://travis-ci.org">Travis CI&lt;/a>，將部落格 repo 的開關打開，如下圖， &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 會在我們每一次 push 到 Github 時自動跑建置或測試。&lt;/p>
&lt;p>&lt;img src="https://anemology.cc/img/setup-travis-ci-for-hexo-on-github-1.png" alt="travis-ci-settings">&lt;/p>
&lt;h2 id="取得-github-token">取得 Github Token&lt;/h2>
&lt;p>因為部署之後需要 push 回 Github 上，&lt;a href="https://travis-ci.org">Travis CI&lt;/a> 需要額外的 &lt;code>Token&lt;/code>，來做這件事，在 Github 上產生一個 &lt;code>Token&lt;/code> 供 CI 使用。&lt;/p>
&lt;p>Settings → Developer settings → Personal access tokens → Generate new token → Note 可以註記是 Travis CI 使用 → Select scopes → 只要選 &lt;code>public_repo&lt;/code> 就夠了 → Generate token&lt;/p>
&lt;p>然後會出現一段英數字混雜的 token，複製起來貼到 Travis CI Repo 設定的 &lt;code>Environment Variables&lt;/code> 的 Value 位置，Name 為 &lt;code>GH_TOKEN&lt;/code>，按下 &lt;code>ADD&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://anemology.cc/img/setup-travis-ci-for-hexo-on-github-2.png" alt="travis-ci-repo-settings">&lt;/p>
&lt;p>看到很多文章，以前 &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 設定的這些敏感資訊，因為會顯示在 log 裡，需要額外加密。但現在 &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 都直接做好了，像是環境變數等等，在 log 內會變成 &lt;code>[secure]&lt;/code> 字串，就不用擔心洩漏的問題。&lt;/p>
&lt;h2 id="編寫-travis-ci-設定檔">編寫 Travis CI 設定檔&lt;/h2>
&lt;p>&lt;a href="https://travis-ci.org">Travis CI&lt;/a> 的設定檔名稱是 &lt;code>.travis.yml&lt;/code> ，是告訴 &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 要做什麼事情，放在網站原始碼的根目錄下就可以。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 使用 nodejs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">language&lt;/span>: &lt;span style="color:#ae81ff">node_js&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定 nodejs 版本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">node_js&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 設定需要快取的資料夾，減少往後建置時間&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">cache&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">directories&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">node_modules&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 只在 hexo 分支提交時進行動作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">branches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">only&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">hexo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">before_install&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 設定時區&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">export TZ=&amp;#39;Asia/Taipei&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">install&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 安裝相關套件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">npm install hexo-cli -g&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">npm install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">before_script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 替換 hexo 設定檔 deploy:repo 的網址，使用 token 進行身分認證及提交，GH_TOKEN 為剛剛設定的 Environment Variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">sed -i&amp;#39;&amp;#39; &amp;#34;s~https://github.com/anemology/anemology.github.io.git~https://${GH_TOKEN}:x-oauth-basic@github.com/anemology/anemology.github.io.git~&amp;#34; _config.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 替換 hexo 設定檔 deploy:message 的值，這樣就不用每一次都要去改 deploy 時的訊息，如果用預設的 site update 就可以不用改&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">sed -i&amp;#39;&amp;#39; &amp;#34;s~CommitMessageWillReplacedByTravisCI~${TRAVIS_COMMIT_MESSAGE}~&amp;#34; _config.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 清理 hexo 資料夾&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">hexo clean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 建立 public 資料夾&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">hexo generate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 因上一篇文章提到的，在不同機器上進行 hexo deploy，紀錄會不見，這邊先將 master repo clone 下來到 .deploy_git 資料夾，就可以保持原先的 commit 紀錄&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">git clone --depth 1 -b master https://github.com/anemology/anemology.github.io .deploy_git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 進行部屬&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">hexo deploy&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="總結">總結&lt;/h2>
&lt;p>這樣之後每一次寫完文章，只要將原始碼 &lt;code>push&lt;/code> 到 &lt;code>hexo&lt;/code> 分支上，就可以自動部署啦~ 再也不用記 &lt;code>hexo&lt;/code> 的指令了。&lt;/p>
&lt;p>或是可以直接在 Github 上對應位置新增 &lt;code>Markdown&lt;/code> 檔案，按照 &lt;code>hexo&lt;/code> 文章的格式撰寫完，也會有一樣的效果。&lt;/p>
&lt;p>但要注意用 Github 新增檔案的時候，commit 訊息不能填下面的 &lt;code>extended description&lt;/code>，在建置的時候 &lt;code>${TRAVIS_COMMIT_MESSAGE}&lt;/code> 那行會出錯，因為 commit 訊息有兩行。 （個人踩雷經驗，或許重新改寫一下 &lt;code>sed&lt;/code> 寫法可以解決。&lt;/p>
&lt;h2 id="參考網址">參考網址&lt;/h2>
&lt;p>&lt;a href="https://e.printstacktrace.blog/hexo-git-deployer-removes-commits-history-lets-do-something-about-that/">Hexo git deployer removes commits history? Let&amp;rsquo;s do something about that!&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://docs.travis-ci.com/user/best-practices-security">Best Practices in Securing Your Data - Travis CI&lt;/a>&lt;/p></description></item></channel></rss>