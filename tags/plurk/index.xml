<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Plurk on 翱翔在空中</title><link>https://anemology.cc/tags/plurk/</link><description>Recent content in Plurk on 翱翔在空中</description><generator>Hugo</generator><language>zh-TW</language><lastBuildDate>Sat, 21 May 2022 21:39:21 +0800</lastBuildDate><atom:link href="https://anemology.cc/tags/plurk/index.xml" rel="self" type="application/rss+xml"/><item><title>尋找 Plurk 噗文連結</title><link>https://anemology.cc/post/find-plurk-permalink/</link><pubDate>Sat, 21 May 2022 21:39:21 +0800</pubDate><guid>https://anemology.cc/post/find-plurk-permalink/</guid><description>&lt;p>最近在改寫自己的 &lt;a href="https://github.com/anemology/plurkdl">噗浪下載程式&lt;/a>，發現噗文連結並沒有在 API response 內，因此尋找了一下，此篇文章則是記錄過程及思路。&lt;/p>
&lt;p>每篇噗文右下角向下箭頭點開，有個開啟網址的連結，可以連到單篇噗文的網頁，網址後段是 &lt;code>/p/xxxxxx&lt;/code>。後面的 &lt;code>x&lt;/code> 包含英數，看起來像是亂數或是雜湊值產生，初步猜想是後端生成。&lt;/p>
&lt;h2 id="尋找流程">尋找流程&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>查看 &lt;code>/TimeLine/getPlurks&lt;/code> (取得噗文列表)、&lt;code>/Responses/get&lt;/code> (取得單篇噗文回應)，這兩支 API 回傳資料都沒有找到對應字串。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用瀏覽器 DevTools 的網路，看原始 html 內容，也不是後端 render 回傳，因此判斷是 JavaScript 產生。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>以下截圖皆為 Firefox，使用檢測元素指到 &lt;strong>開啟網址&lt;/strong> 元素，class 是 &lt;code>pif-outlink&lt;/code>，JavaScript 通常會使用 css selector + class name 來進行操作。&lt;/p>
&lt;p>&lt;img src="https://anemology.cc/img/find-plurk-permalink-1.png" alt="find-plurk-permalink-1">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>切到 DevTools 除錯器，按 Ctrl+Shift+F 搜尋現在網頁所載入的所有資源，在一個 minify 過的 js 內找到這個 class。點左下的大括號來將 js 排版一下，雖然變數命名沒有改變，但至少可以看到比較清楚的排版。&lt;/p>
&lt;p>產生連結的方式是 &lt;code>o.toString(36)&lt;/code>，再往上找到 &lt;code>o&lt;/code> 的定義，&lt;code>o = r(s)&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://anemology.cc/img/find-plurk-permalink-2.png" alt="find-plurk-permalink-2">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>繼續往上，&lt;code>r&lt;/code> 的定義是一個 function，&lt;code>.data()&lt;/code> 是 jQuery 來取得某元素 data-attribue 的方法，因此可以判斷 &lt;code>e(s)&lt;/code> 是某一個元素。&lt;/p>
&lt;p>最後可以得知，一開始的 &lt;code>o&lt;/code> 會回傳某一個元素的 &lt;code>data-pid&lt;/code> attribute。&lt;/p>
&lt;p>&lt;img src="https://anemology.cc/img/find-plurk-permalink-3.png" alt="find-plurk-permalink-3">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>回到 DevTools 檢測器，搜尋 &lt;code>data-pid&lt;/code>，發現每一個噗文最外層 div 有這個 attribute，而這個 pid 其實就是 API 回傳的 &lt;code>plurk_id&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://anemology.cc/img/find-plurk-permalink-4.png" alt="find-plurk-permalink-4">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>一開始產生連結的方法是 &lt;code>o.toString(36)&lt;/code>，查了 &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString">MDN 的定義&lt;/a>，是產生 n 進位的字串，把值丟進去跑，就可以產生對應的字串了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">$&lt;/span> Number(&lt;span style="color:#ae81ff">1500449470&lt;/span>).&lt;span style="color:#a6e22e">toString&lt;/span>(&lt;span style="color:#ae81ff">36&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;otbu7y&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>最後要轉成 Python code，Python 有內建 &lt;code>hex()&lt;/code> 轉換 16 進位文字，但是沒有支援 36 進位，因此使用 mod 和整除的方式來 &lt;a href="https://github.com/anemology/plurkdl/blob/master/plurkdl.py#L162">簡單實作&lt;/a> 一下，完成！&lt;/p></description></item></channel></rss>