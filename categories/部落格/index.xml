<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>部落格 on 翱翔在空中</title><link>https://anemology.cc/categories/%E9%83%A8%E8%90%BD%E6%A0%BC/</link><description>Recent content in 部落格 on 翱翔在空中</description><generator>Hugo</generator><language>zh-TW</language><lastBuildDate>Sun, 19 Jul 2020 11:52:27 +0000</lastBuildDate><atom:link href="https://anemology.cc/categories/%E9%83%A8%E8%90%BD%E6%A0%BC/index.xml" rel="self" type="application/rss+xml"/><item><title>Hexo 及 NexT 主題升級紀錄</title><link>https://anemology.cc/post/hexo-and-next-update/</link><pubDate>Sun, 19 Jul 2020 11:52:27 +0000</pubDate><guid>https://anemology.cc/post/hexo-and-next-update/</guid><description>&lt;p>從去年開始， GitHub 的 &lt;a href="https://github.com/apps/dependabot">dependabot&lt;/a> 就會自動偵測 repositories 內 npm 使用的相依套件，如果有安全性問題，bot 就會自動通知並發起 pull request，提醒要更新。&lt;/p>
&lt;p>因我的部落格也很久沒更新了，索性就一次將 &lt;a href="https://github.com/hexojs/hexo">Hexo&lt;/a> 及 &lt;a href="https://github.com/next-theme/hexo-theme-next">NexT&lt;/a> 的主題一起更新到最新版，順便紀錄一下作法方便之後再更新。&lt;/p>
&lt;ul>
&lt;li>Hexo &lt;code>3.8.0&lt;/code> -&amp;gt; &lt;code>4.2.1&lt;/code>&lt;/li>
&lt;li>NexT &lt;code>5.1.3&lt;/code> -&amp;gt; &lt;code>7.8.0&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>大版本更新通常會有 breaking changes，更新後發現有不少問題，因 config 自訂的地方也不多，決定整個打掉重練。&lt;/p>
&lt;h2 id="步驟">步驟&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>建一個全空的 hexo 部落格&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 更新 hexo-cli&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install hexo-cli -g
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 初始化 hexo 至 update_blog 資料夾&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hexo init update_blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd update_blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 安裝部署使用的套件 hexo-deployer-git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install hexo-deployer-git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>打開 blog 資料夾底下的 &lt;code>package.json&lt;/code>，確認 hexo 版本 (&lt;code>&amp;quot;hexo&amp;quot;: &amp;quot;^4.2.1&amp;quot;&lt;/code>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>將原本部落格資料夾內的 &lt;code>scaffolds&lt;/code>、&lt;code>source&lt;/code> 資料夾複製到 &lt;code>update_blog&lt;/code> 內&lt;/p>
&lt;/li>
&lt;li>
&lt;p>將原本部落格資料夾內的 &lt;code>themes/next&lt;/code> 資料夾複製到相對應之路徑&lt;/p>
&lt;/li>
&lt;li>
&lt;p>刪除沒有用到的預設主題 &lt;code>themes/landscape&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下載最新的 NexT 主題&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd update_blog
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 因這邊要保留原本舊的 next 主題，所以將新版主題放到不同資料夾&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/theme-next/hexo-theme-next themes/hexo-theme-next
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>調整設定檔，這邊都直接使用新版的 yml 檔案&lt;/p>
&lt;ol>
&lt;li>比對新舊 &lt;code>_config.yml&lt;/code>，有 &lt;a href="https://github.com/anemology/anemology.github.io/blob/7305473a75e8ce6cd38e96adfdfe0311cbd21bbb/_config.yml#L6">調整過的設定&lt;/a> 我用 &lt;code>#@~@&lt;/code> 註記起來，以後比較好找&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>調整主題設定檔&lt;/p>
&lt;ol>
&lt;li>比對 &lt;code>themes\hexo-theme-next\_config.yml&lt;/code> 和 &lt;code>themes\next\_config.yml&lt;/code>，將有調整過的設定改寫至根目錄底下 &lt;code>_config.yml&lt;/code> 的 &lt;code>theme_config:&lt;/code> &lt;a href="https://github.com/anemology/anemology.github.io/blob/7305473a75e8ce6cd38e96adfdfe0311cbd21bbb/_config.yml#L107">區塊&lt;/a>
好處是主題內的設定檔就維持預設的樣子，以後可以整個資料夾更新，統一在同個設定檔案也比較好維護&lt;/li>
&lt;li>另外 &lt;a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/DATA-FILES.md">NexT 文件&lt;/a> 內有提到，也可以將設定寫到 &lt;code>source/_data/next.yml&lt;/code>，就看個人選擇&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;p>完成之後可以在本機下 &lt;code>hexo server&lt;/code>，看一下有無問題&lt;/p>
&lt;/li>
&lt;li>
&lt;p>最後就可以將變更 push 到遠端 hexo 分支，&lt;a href="https://anemology.cc/post/setup-travis-ci-for-hexo-on-github/">之前設定的 Travis CI&lt;/a> 就會自動幫我們部署到 GitHub Pages 啦~&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="其他">其他&lt;/h2>
&lt;ul>
&lt;li>去掉 post 內的 &lt;code>updated&lt;/code> 日期，之後有更新再寫就好，&lt;a href="https://anemology.cc/post/next-edit-time/">Next 主題修改更新時間的顯示規則&lt;/a> 就不用了
不確定這是新版還是舊版 NexT 行為，現在預設是 &lt;code>date&lt;/code> 與 &lt;code>updated&lt;/code> 不同天，才會顯示更新時間，可以參考 &lt;a href="https://github.com/theme-next/hexo-theme-next/commit/9f4f0143aff6e7e804e3396f33acdcf9a109efd0">another_day 設定&lt;/a>&lt;/li>
&lt;li>可以看一下 &lt;code>_config.yml&lt;/code> 的 &lt;a href="https://github.com/anemology/anemology.github.io/blob/7305473a75e8ce6cd38e96adfdfe0311cbd21bbb/_config.yml">commit 紀錄&lt;/a>，會比較清楚&lt;/li>
&lt;/ul>
&lt;h2 id="參考網址">參考網址&lt;/h2>
&lt;p>&lt;a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/UPDATE-FROM-5.1.X.md">Update from NexT v5.1.x&lt;/a>&lt;/p>
&lt;hr>
&lt;ul>
&lt;li>&lt;code>npm&lt;/code> version &lt;code>6.9.0&lt;/code>&lt;/li>
&lt;li>&lt;code>Hexo&lt;/code> version &lt;code>4.2.1&lt;/code>&lt;/li>
&lt;li>&lt;code>NexT&lt;/code> version &lt;code>7.8.0&lt;/code>&lt;/li>
&lt;li>&lt;code>git&lt;/code> version &lt;code>2.22.0.windows.1&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>使用 Travis CI 自動部署 Hexo 部落格</title><link>https://anemology.cc/post/setup-travis-ci-for-hexo-on-github/</link><pubDate>Sun, 30 Jun 2019 16:22:49 +0000</pubDate><guid>https://anemology.cc/post/setup-travis-ci-for-hexo-on-github/</guid><description>&lt;p>之前文章提到，部落格的分支有兩個，&lt;code>hexo&lt;/code> 及 &lt;code>master&lt;/code>，在 &lt;code>hexo&lt;/code> 分支寫文章，之後使用 &lt;code>hexo deploy&lt;/code> 部署到 Github 的 &lt;code>master&lt;/code> 分支上，確定沒問題的時候再將原始碼 &lt;code>push&lt;/code> 到 &lt;code>hexo&lt;/code> 分支。&lt;/p>
&lt;p>但本機還需要安裝 &lt;code>nodejs&lt;/code> 以及 &lt;code>hexo&lt;/code> 才能使用 &lt;code>hexo deploy&lt;/code>。&lt;/p>
&lt;p>現在有了 &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 之後，就可以只專注在寫文章上，不用再去思考或是回想 &lt;code>hexo&lt;/code> 的指令如何下，流程就會變成以下：&lt;/p>
&lt;p>在本機寫完文章，直接將原始碼 &lt;code>push&lt;/code> 到 &lt;code>hexo&lt;/code> 分支上，接著 &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 會幫自動做 &lt;code>hexo deploy&lt;/code> 的動作，自動部署回 Github。&lt;/p>
&lt;h2 id="連結-travis-ci">連結 Travis CI&lt;/h2>
&lt;p>直接使用 Github 的帳號登入 &lt;a href="https://travis-ci.org">Travis CI&lt;/a>，將部落格 repo 的開關打開，如下圖， &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 會在我們每一次 push 到 Github 時自動跑建置或測試。&lt;/p>
&lt;p>&lt;img src="https://anemology.cc/img/setup-travis-ci-for-hexo-on-github-1.png" alt="travis-ci-settings">&lt;/p>
&lt;h2 id="取得-github-token">取得 Github Token&lt;/h2>
&lt;p>因為部署之後需要 push 回 Github 上，&lt;a href="https://travis-ci.org">Travis CI&lt;/a> 需要額外的 &lt;code>Token&lt;/code>，來做這件事，在 Github 上產生一個 &lt;code>Token&lt;/code> 供 CI 使用。&lt;/p>
&lt;p>Settings → Developer settings → Personal access tokens → Generate new token → Note 可以註記是 Travis CI 使用 → Select scopes → 只要選 &lt;code>public_repo&lt;/code> 就夠了 → Generate token&lt;/p>
&lt;p>然後會出現一段英數字混雜的 token，複製起來貼到 Travis CI Repo 設定的 &lt;code>Environment Variables&lt;/code> 的 Value 位置，Name 為 &lt;code>GH_TOKEN&lt;/code>，按下 &lt;code>ADD&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://anemology.cc/img/setup-travis-ci-for-hexo-on-github-2.png" alt="travis-ci-repo-settings">&lt;/p>
&lt;p>看到很多文章，以前 &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 設定的這些敏感資訊，因為會顯示在 log 裡，需要額外加密。但現在 &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 都直接做好了，像是環境變數等等，在 log 內會變成 &lt;code>[secure]&lt;/code> 字串，就不用擔心洩漏的問題。&lt;/p>
&lt;h2 id="編寫-travis-ci-設定檔">編寫 Travis CI 設定檔&lt;/h2>
&lt;p>&lt;a href="https://travis-ci.org">Travis CI&lt;/a> 的設定檔名稱是 &lt;code>.travis.yml&lt;/code> ，是告訴 &lt;a href="https://travis-ci.org">Travis CI&lt;/a> 要做什麼事情，放在網站原始碼的根目錄下就可以。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 使用 nodejs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">language&lt;/span>: &lt;span style="color:#ae81ff">node_js&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 指定 nodejs 版本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">node_js&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#34;10&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 設定需要快取的資料夾，減少往後建置時間&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">cache&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">directories&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">node_modules&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 只在 hexo 分支提交時進行動作&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">branches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">only&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">hexo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">before_install&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 設定時區&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">export TZ=&amp;#39;Asia/Taipei&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">install&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 安裝相關套件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">npm install hexo-cli -g&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">npm install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">before_script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 替換 hexo 設定檔 deploy:repo 的網址，使用 token 進行身分認證及提交，GH_TOKEN 為剛剛設定的 Environment Variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">sed -i&amp;#39;&amp;#39; &amp;#34;s~https://github.com/anemology/anemology.github.io.git~https://${GH_TOKEN}:x-oauth-basic@github.com/anemology/anemology.github.io.git~&amp;#34; _config.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 替換 hexo 設定檔 deploy:message 的值，這樣就不用每一次都要去改 deploy 時的訊息，如果用預設的 site update 就可以不用改&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">sed -i&amp;#39;&amp;#39; &amp;#34;s~CommitMessageWillReplacedByTravisCI~${TRAVIS_COMMIT_MESSAGE}~&amp;#34; _config.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">script&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 清理 hexo 資料夾&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">hexo clean&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 建立 public 資料夾&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">hexo generate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 因上一篇文章提到的，在不同機器上進行 hexo deploy，紀錄會不見，這邊先將 master repo clone 下來到 .deploy_git 資料夾，就可以保持原先的 commit 紀錄&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">git clone --depth 1 -b master https://github.com/anemology/anemology.github.io .deploy_git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 進行部屬&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">hexo deploy&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="總結">總結&lt;/h2>
&lt;p>這樣之後每一次寫完文章，只要將原始碼 &lt;code>push&lt;/code> 到 &lt;code>hexo&lt;/code> 分支上，就可以自動部署啦~ 再也不用記 &lt;code>hexo&lt;/code> 的指令了。&lt;/p>
&lt;p>或是可以直接在 Github 上對應位置新增 &lt;code>Markdown&lt;/code> 檔案，按照 &lt;code>hexo&lt;/code> 文章的格式撰寫完，也會有一樣的效果。&lt;/p>
&lt;p>但要注意用 Github 新增檔案的時候，commit 訊息不能填下面的 &lt;code>extended description&lt;/code>，在建置的時候 &lt;code>${TRAVIS_COMMIT_MESSAGE}&lt;/code> 那行會出錯，因為 commit 訊息有兩行。 （個人踩雷經驗，或許重新改寫一下 &lt;code>sed&lt;/code> 寫法可以解決。&lt;/p>
&lt;h2 id="參考網址">參考網址&lt;/h2>
&lt;p>&lt;a href="https://e.printstacktrace.blog/hexo-git-deployer-removes-commits-history-lets-do-something-about-that/">Hexo git deployer removes commits history? Let&amp;rsquo;s do something about that!&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://docs.travis-ci.com/user/best-practices-security">Best Practices in Securing Your Data - Travis CI&lt;/a>&lt;/p></description></item><item><title>Hexo 部署到 GitHub 之後失去 commit 紀錄</title><link>https://anemology.cc/post/hexo-push-to-github-lost-commit-history/</link><pubDate>Sun, 23 Jun 2019 10:55:32 +0000</pubDate><guid>https://anemology.cc/post/hexo-push-to-github-lost-commit-history/</guid><description>&lt;p>上禮拜寫完文章之後，用 Hexo deploy 到 Github 之後，發現 commits 全沒了！&lt;/p>
&lt;p>只剩下今天的紀錄，一個 initial commit 和 新增文章的。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ git log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>commit 0c1e76b1e3c34dbc898efcf0be59743a4e715089 &lt;span style="color:#f92672">(&lt;/span>HEAD -&amp;gt; master&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Sun Jun &lt;span style="color:#ae81ff">16&lt;/span> 14:10:19 &lt;span style="color:#ae81ff">2019&lt;/span> +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> new post - telegram firstbot using nodejs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>commit dd80cc98ca5539898698b8277f18ba6b6c825e01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Sun Jun &lt;span style="color:#ae81ff">16&lt;/span> 14:10:18 &lt;span style="color:#ae81ff">2019&lt;/span> +0800
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> First commit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>調查後發現，在本機有一個 &lt;code>.deploy_git&lt;/code> 資料夾，是用來 deploy 用的資料夾。&lt;/p>
&lt;p>在 deploy 時的動作是&lt;/p>
&lt;ol>
&lt;li>
&lt;p>檢查有無 &lt;code>.deploy_git&lt;/code> 資料夾，如無則建立，並做 initial commit。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>複製 &lt;code>public&lt;/code> 資料夾內容到 &lt;code>.deploy_git&lt;/code> 資料夾裡。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>commit&lt;/code> 並 &lt;code>push&lt;/code> 至 Github 上。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>會發生 commit 紀錄不見的原因有二&lt;/p>
&lt;ol>
&lt;li>
&lt;p>換電腦，本機上沒有 &lt;code>.deploy_git&lt;/code> 資料夾，導致 deploy 時重新建立。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>deploy 時 &lt;code>push&lt;/code> 到 Github 上，加了參數 &lt;code>--force&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>最後我去舊電腦裡的資料夾，將 &lt;code>.deploy_git&lt;/code> 資料夾弄回來，再重新 deploy 一次就行了。&lt;/p>
&lt;p>若是沒有保留，那些紀錄就真的沒有了。&lt;/p>
&lt;p>所以說要在不同電腦寫作時，還要額外備份 &lt;code>.deploy_git&lt;/code> 資料夾，或是在 deploy 前，將 Github 上的紀錄先 &lt;code>pull&lt;/code> 到本機上。&lt;/p>
&lt;p>若是沒有換電腦還真的不會踩到這個雷&amp;hellip; &lt;code>git push --force&lt;/code> 真的要慎用。&lt;/p>
&lt;h2 id="參考網址">參考網址&lt;/h2>
&lt;p>&lt;a href="https://e.printstacktrace.blog/hexo-git-deployer-removes-commits-history-lets-do-something-about-that/">Hexo git deployer removes commits history? Let&amp;rsquo;s do something about that!&lt;/a>&lt;/p>
&lt;p>&lt;a href="https://github.com/hexojs/hexo-deployer-git/blob/master/lib/deployer.js">hexojs/hexo-deployer-git: Git deployer plugin for Hexo.&lt;/a>&lt;/p></description></item><item><title>Hexo 備份至 GitHub</title><link>https://anemology.cc/post/hexo-backup/</link><pubDate>Sun, 07 Oct 2018 14:22:01 +0000</pubDate><guid>https://anemology.cc/post/hexo-backup/</guid><description>&lt;p>如果選擇 GitHub Pages 當部落格的 host，Hexo 雖然會將產生的靜態檔案 deploy 到 GitHub，但我們還是要將原始檔案備份起來，例如寫文章用的 Markdown，或是 Hexo 的設定檔。&lt;/p>
&lt;p>以下就來說說如何在已經建立 &lt;code>username.github.io&lt;/code> 儲存庫的情況下，另外開啟一個分支，來儲存我們部落格的原始檔。&lt;/p>
&lt;p>當然也可以在 GitHub 上開一個新的儲存庫，但在參考多方意見後，還是決定在相同的儲存庫下存放檔案。&lt;/p>
&lt;p>首先進入到我們 blog 的資料夾，應該會有以下檔案及資料夾：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>blog&lt;span style="color:#f92672">/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .deploy_git&lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#75715e">--Hexo deploy to GitHub 用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> node_modules&lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#75715e">--npm 套件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#75715e">--Hexo 產生的靜態檔案
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> scaffolds&lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#75715e">--Hexo 樣板*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">source&lt;/span>&lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#75715e">--原始文章的 Markdown*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> themes&lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#75715e">--Hexo 主題*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> .gitignore &lt;span style="color:#75715e">--git 排除檔案清單*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> _config.yml &lt;span style="color:#75715e">--Hexo 設定檔*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> db.json &lt;span style="color:#75715e">--Hexo DB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> package.json &lt;span style="color:#75715e">--npm 套件資訊*
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> package&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#66d9ef">lock&lt;/span>.json &lt;span style="color:#75715e">--npm 套件資訊*
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打星號的檔案要放到 GitHub 上，其他檔案因為 &lt;code>npm&lt;/code> 或是 &lt;code>Hexo&lt;/code> 都會幫我們自動建立，所以不需要特地放到 git 裡。&lt;/p>
&lt;p>其實 Hexo 已經幫我們想好了，在 &lt;code>.gitignore&lt;/code> 裡就有排除了不需要放到 git 裡面的檔案，如果你沒有這個檔案，自行新增一個即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>.DS_Store
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Thumbs.db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>db.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>*.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node_modules/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>public/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.deploy*/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="加入-git">加入 git&lt;/h2>
&lt;p>再來就可以執行 git 指令來將資料夾加入 git：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#初始化&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git init .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#建立新分支 hexo&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout -b hexo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#將檔案加入 git&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#e6db74">&amp;#39;Initial commit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#加入遠端儲存庫位址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git remote add origin https://github.com/username/username.github.io.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#將 hexo 分支推送至遠端儲存庫&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push --set-upstream origin hexo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>這樣就完成啦，GitHub 的 &lt;code>username.github.io&lt;/code> 儲存庫應該就會有兩個分支， &lt;code>master&lt;/code> 儲存 Hexo 產生的靜態檔案， &lt;code>hexo&lt;/code> 分支儲存我們 blog 的原始檔。&lt;/p>
&lt;p>以後寫完文章之後，就按照普通 git 流程，將檔案 push 至 GitHub 即可。&lt;/p>
&lt;h2 id="還原檔案">還原檔案&lt;/h2>
&lt;p>如果檔案不小心遺失或想要在另外一台電腦上寫作，也很簡單，步驟如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#將檔案 clone 回來&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone https://github.com/username/username.github.io.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd username.github.io/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#切換到 hexo 分支&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout hexo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#依照 package.json 重新安裝 hexo 套件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>npm install
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#最後啟動 hexo server 看是不是可以正常瀏覽&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hexo server
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>以上。&lt;/p>
&lt;hr>
&lt;ul>
&lt;li>&lt;code>npm&lt;/code> version &lt;code>6.4.1&lt;/code>&lt;/li>
&lt;li>&lt;code>Hexo&lt;/code> version &lt;code>3.7.1&lt;/code>&lt;/li>
&lt;li>&lt;code>git&lt;/code> version &lt;code>2.17.0.windows.1&lt;/code>&lt;/li>
&lt;/ul></description></item><item><title>Hexo 介紹和常用指令</title><link>https://anemology.cc/post/hexo-introduction-and-commands/</link><pubDate>Sat, 25 Nov 2017 23:52:18 +0000</pubDate><guid>https://anemology.cc/post/hexo-introduction-and-commands/</guid><description>&lt;h5 id="hexo-是什麼">Hexo 是什麼?&lt;/h5>
&lt;p>&lt;a href="https://hexo.io/zh-tw/">Hexo&lt;/a> 是一個基於 Node.js 所建立的網誌框架，你不需要懂 Node.js，只要會下 command 就行了。
使用 &lt;code>Markdown&lt;/code> 來編寫文章，&lt;a href="https://hexo.io/zh-tw/">Hexo&lt;/a> 會將你寫的 Markdown 文章解析並產生靜態檔案，可以直接部署到 GitHub 上，完全不需要後端的支援。&lt;/p>
&lt;p>大多數人部署到 GitHub 的原因是，它可以免費置放靜態檔案，缺點是必須公開所有的程式碼，
而 &lt;a href="https://hexo.io/zh-tw/">Hexo&lt;/a> 也有方便的指令可以將你的網誌部署到 GitHub 上。
當然其他網頁伺服器軟體也可以，但就要自行架設主機，建置環境。&lt;/p>
&lt;p>我選擇 &lt;a href="https://hexo.io/zh-tw/">Hexo&lt;/a> 的原因是&amp;hellip;它有完整的繁體中文文件!
你也可以選擇很多人在用的 &lt;a href="https://jekyllrb.com/">Jekyll&lt;/a>、&lt;a href="https://gohugo.io/">Hugo&lt;/a>&lt;/p>
&lt;h5 id="hexo-常用指令">Hexo 常用指令&lt;/h5>
&lt;pre>&lt;code>hexo server
&lt;/code>&lt;/pre>
&lt;p>啟動伺服器，瀏覽 &lt;a href="http://localhost:4000/">http://localhost:4000/&lt;/a> 就可以看到所產生好的網誌。&lt;/p>
&lt;pre>&lt;code>hexo new post HelloWorld
&lt;/code>&lt;/pre>
&lt;p>建立一篇新的文章，在 &lt;code>source\_posts&lt;/code> 底下會產生一個 &lt;code>HelloWorld.md&lt;/code> 的檔案，編輯這個檔案來撰寫文章。&lt;/p>
&lt;pre>&lt;code>hexo clean
&lt;/code>&lt;/pre>
&lt;p>刪除快取檔案 &lt;code>db.json&lt;/code> 和放置靜態檔案的 &lt;code>public&lt;/code> 資料夾。&lt;/p>
&lt;pre>&lt;code>hexo generate
&lt;/code>&lt;/pre>
&lt;p>產生靜態檔案於 &lt;code>public&lt;/code> 資料夾。&lt;/p>
&lt;pre>&lt;code>hexo deploy
&lt;/code>&lt;/pre>
&lt;p>部屬網誌，需先於 &lt;code>_config.yml&lt;/code> 中設定 &lt;code>deploy&lt;/code> 相關參數。&lt;/p></description></item><item><title>Next 主題修改更新時間的顯示規則</title><link>https://anemology.cc/post/next-edit-time/</link><pubDate>Sat, 25 Nov 2017 18:19:01 +0000</pubDate><guid>https://anemology.cc/post/next-edit-time/</guid><description>&lt;p>只有在更新時間 &amp;gt; 發表時間的時候才顯示&lt;/p>
&lt;p>修改 themes\next\layout\_macro&amp;lt;span style=&amp;ldquo;color:red&amp;rdquo;&amp;gt;post.swig&lt;!-- raw HTML omitted -->
兩個 if 判斷子句中加入 &lt;code>and post.updated &amp;gt; post.date&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;post-meta&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">span&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;post-time&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {% if theme.post_meta.created_at and theme.post_meta.updated_at and post.updated &amp;gt; post.date %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">span&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;post-meta-divider&amp;#34;&lt;/span>&amp;gt;|&amp;lt;/&lt;span style="color:#f92672">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {% endif %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {% if theme.post_meta.updated_at and post.updated &amp;gt; post.date %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">span&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;post-meta-item-icon&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">i&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;fa fa-calendar-check-o&amp;#34;&lt;/span>&amp;gt;&amp;lt;/&lt;span style="color:#f92672">i&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {% if theme.post_meta.item_text %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">span&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;post-meta-item-text&amp;#34;&lt;/span>&amp;gt;{{ __(&amp;#39;post.modified&amp;#39;) }}&amp;amp;#58;&amp;lt;/&lt;span style="color:#f92672">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {% endif %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">time&lt;/span> &lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{{ __(&amp;#39;post.modified&amp;#39;) }}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">itemprop&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;dateModified&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">datetime&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;{{ moment(post.updated).format() }}&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {{ date(post.updated, config.date_format) }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">time&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {% endif %}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">span&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>